name: Fibo app

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'

jobs:
  build-push-images-with-cache:
    name: Build and push Docker image to Docker Hub
    runs-on: ubuntu-20.04 # wybieram system 
    permissions:
      contents: read
      packages: write

    steps:
      - name: Check out the repo # domyslny action
        uses: actions/checkout@v3

      - name: Set up QEMU #do budowy obrazow na inne platformy
        uses: docker/setup-qemu-action@v2

      - name: Buildx set-up # instalacja buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GHCR # logowanie do ghcr.io
        uses: docker/login-action@v2
        with:
          registry: ghcr.io # deklaracja registry
          username: ${{ secrets.GHCR_USERNAME }} # uzytkownik gita
          password: ${{ secrets.TOKEN }} #token dostepu do gita
          
      - name: Login to Docker Hub #logowanie do dockerhub, potrzebne do cache
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }} #uzytkownik
          password: ${{ secrets.DOCKERHUB_TOKEN }}  #token

      - name: Cache Docker layers # cachowanie
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-multi-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-multi-buildx
      
      - name: Extract metadata (tags, labels) for Docker # potrzebne do metadata, ustalilem zeby tagowalo po branchu oraz wersji
        id: meta 
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/Janeeczek/fib
          flavor: latest=true
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}

      - name: Build and push Docker image # budowanie i pushowanie obrazu
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm/v8 # deklaracja platform
          push: true
          tags: ${{ steps.meta.outputs.tags }} # przypisanie tagow
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=janeeczek/fib:buildcache # cache z dockerhubu
          cache-to: type=registry,ref=janeeczek/fib:buildcache,mode=max # zapis cashe do dockerhubu
